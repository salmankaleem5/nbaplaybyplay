{"version":3,"sources":["main.es6.js"],"names":["apiModule","module","url","getUrl","yesterdayDate","Date","setDate","getDate","yesterdayString","toISOString","substr","gamesListModule","selector","$","selectedGameID","undefined","gamesListData","updateList","games","empty","forEach","el","i","gameInputDiv","class","gameInputLabel","type","name","value","gameID","id","appendTo","labelText","homeTeam","teamName","awayTeam","removeClass","notifyUser","message","append","setSelectedGameID","getSelectedGameID","getSelectedGame","game","each","key","inputSlider","document","getElementById","noUiSlider","create","start","step","connect","range","pips","mode","density","filter","startOfSeasonUTC","getTime","yesterdayDateUTC","on","event","preventDefault","gameDate","val","gameDateUTC","test","alert","ajax","data","action","formatDate","success","response","Array","isArray","length","error","xhr","status","console","log","dataType","dateString","replace","RegExp","removeAttr","timeRange","get","startTime","parseInt","endTime","selectedGame","date","Object","keys","homeTeamRow","makeTableRows","abbreviation","awayTeamRow","teamStats","statsCategories","row","text","stat"],"mappings":"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","file":"main.js","sourcesContent":["// import \"babel-polyfill\";\n\n(function(){\n\tconst apiModule = (function(){\n\t\tlet module = {};\n\t\tconst url = \"http://localhost:8888/api/index.php\";\n\n\t\tmodule.getUrl = () => {\n\t\t\treturn url;\n\t\t};\n\n\t\treturn module;\n\t}());\n\n\t// Sets the default date to yesterday's date\n\tconst yesterdayDate = new Date();\n\tyesterdayDate.setDate( yesterdayDate.getDate() - 1 );\n\tconst yesterdayString = yesterdayDate.toISOString().substr(0,10);\n\t// $(\"#game-date-input\")\n\t// \t.val( yesterdayString )\n\t// \t.attr('max', yesterdayString );\n\n\t/**\n\t * Module to interact with the games list\n\t */\n\tconst gamesListModule = (() => {\n\t\tconst selector = $('#games-list');\n\t\tlet selectedGameID = undefined;\n\t\tlet gamesListData = undefined;\n\n\t\treturn {\n\t\t\t/**\n\t\t\t * @param  JSONObject games\n\t\t\t * @return none\n\t\t\t */\n\t\t\tupdateList: ( games ) => {\n\t\t\t\tselector.empty();\n\t\t\t\tgames.forEach(function(el, i){\n\t\t\t\t\tconst gameInputDiv = $(\"<div/>\", {\n\t\t\t\t\t\tclass: \"form-check\"\n\t\t\t\t\t});\n\t\t\t\t\tconst gameInputLabel = $(\"<label />\", {\n\t\t\t\t\t\tclass: \"form-check-label\"\n\t\t\t\t\t});\n\t\t\t\t\t$(\"<input />\", {\n\t\t\t\t\t\ttype: \"radio\",\n\t\t\t\t\t\tname: \"game\",\n\t\t\t\t\t\tvalue: el.gameID,\n\t\t\t\t\t\tid: `game${i}`,\n\t\t\t\t\t\tclass: \"form-check-input\"\n\t\t\t\t\t}).appendTo( gameInputLabel );\n\n\t\t\t\t\tconst labelText =  `${el.homeTeam.teamName} vs ${el.awayTeam.teamName}`;\n\t\t\t\t\t$(`<span>${labelText}</span>`).appendTo(gameInputLabel);\n\t\t\t\t\tgameInputLabel.appendTo( gameInputDiv );\n\t\t\t\t\tgameInputDiv.appendTo( selector );\n\t\t\t\t});\n\t\t\t\tselector.removeClass('hidden');\n\n\t\t\t\tgamesListData = games;\n\t\t\t},\n\t\t\t/**\n\t\t\t * [notifyUser description]\n\t\t\t * @param  {[type]} $message [description]\n\t\t\t * @return {[type]}          [description]\n\t\t\t */\n\t\t\tnotifyUser: ( message ) => {\n\t\t\t\tselector.empty();\n\t\t\t\tselector.append(`<p>${message}</p>`);\n\t\t\t\tselector.removeClass('hidden');\n\t\t\t},\n\t\t\t/**\n\t\t\t * @param String\n\t\t\t */\n\t\t\tsetSelectedGameID: ( gameID ) => {\n\t\t\t\tselectedGameID = gameID;\n\t\t\t},\n\t\t\t/**\n\t\t\t * @return String\n\t\t\t */\n\t\t\tgetSelectedGameID: () => {\n\t\t\t\treturn selectedGameID;\n\t\t\t},\n\t\t\t/**\n\t\t\t * @return Object\n\t\t\t */\n\t\t\tgetSelectedGame: () => {\n\t\t\t\tlet game = undefined;\n\t\t\t\t$.each(gamesListData, (key, value) => {\n\t\t\t\t\tif( value.gameID == selectedGameID ){\n\t\t\t\t\t\tgame = value;\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn game;\n\t\t\t}\n\t\t}\n\t})();\n\n\t/*\n\t\tInitialize time range slider\n\t */\n\tconst inputSlider = document.getElementById('input-slider');\n\tnoUiSlider.create(inputSlider, {\n\t\tstart: [0, 48],\n\t\tstep: 1,\n\t\tconnect: true,\n\t\trange: {\n\t\t\t'min': [0],\n\t\t\t'max': [48],\n\t\t},\n\t\tpips: {\n\t\t\tmode: 'steps',\n\t\t\tdensity: 3,\n\t\t\tfilter: function( value, type ){\n\t\t\t\treturn value % 12 ? 2 : 1;\n\t\t\t}\n\t\t}\n\t});\n\n\tconst startOfSeasonUTC = new Date(\"2017-10-17\").getTime();\n\tconst yesterdayDateUTC = yesterdayDate.getTime();\n\t/*\n\t\tEvent handler to retrieve games from the specified date\n\t */\n\t$(\"#get-games-button\").on('click', (event) => {\n\t\tevent.preventDefault();\n\n\t\t// Confirm date is between 10/17/2017 and today's date\n\t\tconst gameDate = $(\"#game-date-input\").val();\n\t\tconst gameDateUTC = new Date(gameDate).getTime();\n\n\t\tif( !(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/.test(gameDate)) ){\n\t\t\talert(\"Please enter a valid date, between 10/17/2017 and yesterday's date\");\n\t\t\treturn false;\n\t\t}\n\n\t\t// Yesterday's date is the maximum date a user can select\n\t\tif( gameDateUTC < startOfSeasonUTC || gameDateUTC > yesterdayDateUTC ){\n\t\t\talert(\"Please enter a valid date, between 10/17/2017 and yesterday's date\");\n\t\t\treturn false;\n\t\t}\n\n\t\t// AJAX request to get games on date provided\n\t\t$.ajax({\n\t\t\turl: apiModule.getUrl(),\n\t\t\ttype: \"POST\",\n\t\t\tdata: {\n\t\t\t\taction: \"getGames\",\n\t\t\t\tgameDate: formatDate( gameDate ),\n\t\t\t},\n\t\t\tsuccess: ( response ) => {\n\t\t\t\tif( Array.isArray(response) && response.length > 0 ){\n\t\t\t\t\t// Prompt user to select a game to retrieve stats from, populate game list with multiple games that user can select\n\t\t\t\t\tgamesListModule.updateList(response);\n\t\t\t\t} else if( response.length == 0 ){\n\t\t\t\t\tgamesListModule.notifyUser(\"No games found for the specified date\");\n\t\t\t\t}\n\t\t\t},\n\t\t\terror: ( xhr, status, error ) => {\n\t\t\t\tconsole.log( status, error );\n\t\t\t},\n\t\t\tdataType: \"json\"\n\t\t});\n\t});\n\n\t/**\n\t * Format date from input to match pattern accepted by the NBA's API\n\t * @param  String\n\t * @return String\n\t */\n\tfunction formatDate(dateString){\n\t\treturn dateString.replace(new RegExp('-', 'g'), \"\");\n\t}\n\n\t// Input items visible after games are retrieved\n\t$(\"#games-list\").on('change', 'input[type=radio][name=game]', (event) => {\n\t\tgamesListModule.setSelectedGameID( this.value );\n\t\t// Enable get data button after a game is selected\n\t\t$(\"#get-data-button\").removeAttr('disabled');\n\t});\n\n\t/*\n\t\tEvent handler to retrieve statistics for a given game within the specified time range\n\t */\n\t$(\"#get-data-button\").on('click', (event) => {\n\t\tevent.preventDefault();\n\n\t\tconst timeRange = inputSlider.noUiSlider.get();\n\t\tconst startTime = parseInt(timeRange[0]);\n\t\tconst endTime = parseInt(timeRange[1]);\n\n\t\tconst selectedGame = gamesListModule.getSelectedGame();\n\n\t\tif( (startTime < 0 || startTime >= 48) || (endTime <= 0 || endTime > 48) ){\n\t\t\talert('Invalid time range, please select a time between 0 minutes and 48 minutes')\n\t\t\treturn false;\n\t\t}\n\n\t\tif( selectedGame.gameID == undefined ){\n\t\t\treturn false;\n\t\t}\n\n\t\t$.ajax({\n\t\t\turl: apiModule.getUrl(),\n\t\t\ttype: \"POST\",\n\t\t\tdata: {\n\t\t\t\taction: \"getStats\",\n\t\t\t\tgameID: selectedGame.gameID,\n\t\t\t\tgameDate: selectedGame.date,\n\t\t\t\tstartTime: timeRange[0],\n\t\t\t\tendTime: timeRange[1]\n\t\t\t},\n\t\t\tsuccess: ( response ) => {\n\t\t\t\t// var selectedGame = gamesListModule.getSelectedGame();\n\t\t\t\tif( Object.keys(response).length == 2 && selectedGame != undefined ){\n\t\t\t\t\t$(\"#table-stats tbody\").empty();\n\n\t\t\t\t\tconst homeTeamRow = makeTableRows( response[selectedGame.homeTeam.abbreviation], selectedGame.homeTeam.teamName );\n\t\t\t\t\tconst awayTeamRow = makeTableRows( response[selectedGame.awayTeam.abbreviation], selectedGame.awayTeam.teamName );\n\n\t\t\t\t\t$(\"#table-stats\").append(homeTeamRow).append(awayTeamRow).removeClass('hidden');\n\t\t\t\t}\n\t\t\t},\n\t\t\terror: ( xhr, status, error ) => {\n\t\t\t\tconsole.log( status, error );\n\t\t\t},\n\t\t\tdataType: \"json\"\n\t\t});\n\t});\n\n\t/**\n\t * Creates table row that will be appended to the statistics table\n\t * @param  Object\n\t * @param  String\n\t * @return DOMElement\n\t */\n\tfunction makeTableRows( teamStats, teamName ){\n\t\tconst statsCategories = ['PTS', 'FGM', 'FGA', '2PM', '2PA', '3PM', '3PA', 'FTM', 'FTA', 'REB', 'TOV', 'PF', 'SUB'];\n\n\t\tconst row = $(\"<tr/>\");\n\t\t$(\"<td/>\", {\n\t\t\ttext: teamName\n\t\t}).appendTo(row);\n\n\t\tstatsCategories.forEach((stat) => {\n\t\t\t$(\"<td/>\", {\n\t\t\t\ttext: teamStats[stat],\n\t\t\t}).appendTo(row);\n\t\t});\n\n\t\treturn row;\n\t}\n})();\n"]}